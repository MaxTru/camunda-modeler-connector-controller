{"version":3,"file":"client.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AARA;AAxBA;AA2CA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAiBA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AAEA;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;AAMA;;AAIA;AAAA;AAAA;AACA;AADA;AAGA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;;AAEA;AACA;AAAA;AAAA;;AAEA;AAEA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAKA;;AAEA;AACA;AAIA;;AAEA;AAEA;AACA;AACA;AAHA;AAhBA;AAwBA;AACA;AACA;AACA;AAFA;AAKA;AAEA;;AAEA;AACA;AACA;AAZA;;AAeA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;;AAMA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AACA;AAJA;AAQA;;AArIA;;;;;;;;;;;;;;;;;;;;ACtjWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;ACzrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA","sources":["webpack://camunda-modeler-autosave-plugin/./client/ConfigOverlay.js","webpack://camunda-modeler-autosave-plugin/./client/ConnectorControllerPlugin.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/components.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/index.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/react.js","webpack://camunda-modeler-autosave-plugin/./node_modules/classnames/index.js","webpack://camunda-modeler-autosave-plugin/./resources/timer.svg","webpack://camunda-modeler-autosave-plugin/webpack/bootstrap","webpack://camunda-modeler-autosave-plugin/webpack/runtime/compat get default export","webpack://camunda-modeler-autosave-plugin/webpack/runtime/define property getters","webpack://camunda-modeler-autosave-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://camunda-modeler-autosave-plugin/webpack/runtime/make namespace object","webpack://camunda-modeler-autosave-plugin/./client/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'camunda-modeler-plugin-helpers/react';\r\nimport { Overlay, Section } from 'camunda-modeler-plugin-helpers/components';\r\n\r\nconst OFFSET = { left: 0 };\r\n\r\n// we can even use hooks to render into the application\r\nexport default function ConfigOverlay({ anchor, initValues, onClose, onTemplateAdd }) {\r\n  const [ enabled, setEnabled ] = useState(initValues.enabled);\r\n  const [ connected, setConnected ] = useState(initValues.connected);\r\n  const [ connectorEndpoint, setConnectorEndpoint ] = useState(initValues.connectorEndpoint);\r\n  const [ fetchedConnectors, setFetchedConnectors ] = useState();\r\n\r\n  const onSubmit = () => onClose({ enabled, connectorEndpoint });\r\n\r\n  const fetchConnectors = async (endpoint) => {\r\n    const response = await fetch(endpoint);\r\n    const responseJson = await response.json()\r\n    setFetchedConnectors(responseJson);\r\n  };\r\n\r\n  if (!connected) {\r\n    return (\r\n      <Overlay anchor={ anchor } onClose={ onClose } offset={ OFFSET }>\r\n        <Section>\r\n          <Section.Header>Connector Controller - establish Connection</Section.Header>\r\n\r\n          <Section.Body>\r\n            <form id=\"connectorControllerForm\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"endpoint\">Enter endpoint of your running Connectors.\r\n                  This will allow you to retrieve status, and fetch connector templates.</label>\r\n                <input\r\n                  type=\"url\"\r\n                  className=\"form-control\"\r\n                  name=\"endpoint\"\r\n                  value={ connectorEndpoint }\r\n                  onChange={ (event) =>\r\n                    setConnectorEndpoint(event.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <Section.Actions>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                form=\"connectorControllerForm\"\r\n                onClick={ () =>\r\n                {\r\n                  fetchConnectors(connectorEndpoint);\r\n                  setConnected(!connected);\r\n                }\r\n                }\r\n              >\r\n                Control Connectors\r\n              </button>\r\n            </Section.Actions>\r\n          </Section.Body>\r\n        </Section>\r\n      </Overlay>\r\n    );\r\n  } else {\r\n    return (\r\n      <Overlay anchor={ anchor } onClose={ onClose } offset={ OFFSET }>\r\n        <Section>\r\n          <Section.Header>Connector Controller - Controlcenter</Section.Header>\r\n\r\n          <Section.Body>\r\n            <div>\r\n            {fetchedConnectors ?\r\n              Object.entries(fetchedConnectors).map(([key, value]) => \r\n                <div className=\"d-flex-center list-container\">              \r\n                  <div className=\"d-flex-center\"><div className={true ? 'icon icon-ok' : 'icon icon-nok'}></div>{key}</div>\r\n                  <div onClick={() => onTemplateAdd(value)} className=\"d-flex-center btn-primary btn-padding\">Add</div>\r\n                </div>\r\n              ) \r\n            : \r\n            \"Loading...\"}\r\n            </div>\r\n\r\n            <Section.Actions>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                form=\"connectorControllerForm\"\r\n                onClick={ () => {\r\n                  console.log(fetchedConnectors);\r\n                  setConnected(!connected);\r\n                }\r\n                }\r\n              >\r\n                Disconnect\r\n              </button>\r\n            </Section.Actions>\r\n          </Section.Body>\r\n        </Section>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Fragment, PureComponent } from 'camunda-modeler-plugin-helpers/react';\r\nimport { Fill } from 'camunda-modeler-plugin-helpers/components';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport Icon from '../resources/timer.svg';\r\n\r\nimport ConfigOverlay from './ConfigOverlay';\r\n\r\nconst defaultState = {\r\n  enabled: false,\r\n  connectorEndpoint: 'http://localhost:9898/connectors',\r\n  connected: false,\r\n  configOpen: false,\r\n};\r\n\r\nconst TAB_TYPE_BPMN = 'cloud-bpmn';\r\n\r\n/**\r\n * An example client extension plugin to enable auto saving functionality\r\n * into the Camunda Modeler\r\n */\r\nexport default class ConnectorControllerPlugin extends PureComponent {\r\n  activeTab = {\r\n    id: '__empty',\r\n    type: 'empty'\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = defaultState;\r\n\r\n    this.handleConfigClosed = this.handleConfigClosed.bind(this);\r\n\r\n    this._buttonRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    /**\r\n    * The component props include everything the Application offers plugins,\r\n    * which includes:\r\n    * - config: save and retrieve information to the local configuration\r\n    * - subscribe: hook into application events, like <tab.saved>, <app.activeTabChanged> ...\r\n    * - triggerAction: execute editor actions, like <save>, <open-diagram> ...\r\n    * - log: log information into the Log panel\r\n    * - displayNotification: show notifications inside the application\r\n    */\r\n    const {\r\n      config,\r\n      subscribe\r\n    } = this.props;\r\n\r\n    // retrieve plugin related information from the application configuration\r\n    config.getForPlugin('connectorController', 'config')\r\n      .then(config => this.setState(config));\r\n\r\n    // subscribe to the event when the active tab changed in the application\r\n    subscribe('app.activeTabChanged', ({ activeTab }) => {\r\n      this.activeTab = activeTab;\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      configOpen,\r\n      enabled\r\n    } = this.state;\r\n\r\n  }\r\n\r\n  handleConfigClosed(newConfig) {\r\n    this.setState({ configOpen: false });\r\n\r\n    if (newConfig) {\r\n\r\n      // via <config> it is also possible to save data into the application configuration\r\n      this.props.config.setForPlugin('connectorController', 'config', newConfig)\r\n        .catch(console.error);\r\n\r\n      this.setState(newConfig);\r\n    }\r\n  }\r\n\r\n  addTemplate = async (template) => {\r\n    const {\r\n      config,\r\n      displayNotification\r\n    } = this.props;\r\n\r\n    const elementTemplates = await config.get('elementTemplates') || [];\r\n\r\n    if (!(elementTemplates.map(t => t.id)).includes(template.id)) {\r\n      await this.setElementTemplates([\r\n        ...elementTemplates,\r\n        template\r\n      ]);\r\n    }\r\n\r\n    displayNotification(\r\n      {\r\n        type: 'success',\r\n        title: 'Connector Template Added',\r\n        content: 'Have fun using the Connector!'\r\n      }\r\n    );\r\n  }\r\n\r\n  setElementTemplates = async elementTemplates => {\r\n    const {\r\n      config,\r\n      triggerAction\r\n    } = this.props;\r\n\r\n    const activeTab = this.activeTab;\r\n\r\n    await config.set('elementTemplates', elementTemplates);\r\n\r\n    if (activeTab && activeTab.type === TAB_TYPE_BPMN) {\r\n      triggerAction('elementTemplates.reload');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      configOpen,\r\n      enabled,\r\n      connectorEndpoint\r\n    } = this.state;\r\n\r\n    const initValues = {\r\n      enabled,\r\n      connectorEndpoint\r\n    };\r\n\r\n    // we can use fills to hook React components into certain places of the UI\r\n    return <Fragment>\r\n      <Fill slot=\"status-bar__file\" group=\"9_connectorcontroller\">\r\n        <button\r\n          ref={ this._buttonRef }\r\n          className={ classNames('btn', { 'btn--active': configOpen }) }\r\n          onClick={ () => this.setState({ configOpen: true }) }>\r\n          <Icon />\r\n        </button>\r\n      </Fill>\r\n      { this.state.configOpen && (\r\n        <ConfigOverlay\r\n          anchor={ this._buttonRef.current }\r\n          onClose={ this.handleConfigClosed }\r\n          onTemplateAdd={ this.addTemplate }\r\n          initValues={ initValues }\r\n        />\r\n      )}\r\n    </Fragment>;\r\n  }\r\n}\r\n","if (!window.components) {\n  throw notCompatible('3.4');\n}\n\nfunction notCompatible(requiredVersion) {\n  return new Error('Not compatible with Camunda Modeler < v' + requiredVersion);\n}\n\nexport const NotCompatible = function(requiredVersion) {\n  return function NotCompatibleComponent() {\n    throw notCompatible(requiredVersion);\n  };\n};\n\n/**\n * Fill component. Set `slot` to \"toolbar\" to include in the top toolbar.\n * Use `group` and `priority=0` to place for correct ordering. The higher\n * the priority, the earlier the Fill is displayed within the group.\n *\n * @type {import('react').ComponentType<{ slot: string, group?: string, priority?: Number }>}\n *\n * @example\n *\n * import { Fill } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomFill(props) {\n *   return (\n *     <Fill group=\"4_export\" slot=\"toolbar\" priority={100}>\n *       <button type=\"button\" onClick={ props.openExportTool }>\n *         Open Export Tool\n *       </button>\n *     </Fill>\n *   );\n * }\n */\nexport const Fill = window.components.Fill;\n\n/**\n * Modal component.\n *\n * @type {import('react').ComponentType<{ onClose: Function }>}\n *\n * @example\n *\n * import { Modal } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomModal(props) {\n *   return (\n *    <Modal onClose={ props.onClose }>\n *      <Modal.Title>\n *        Custom Modal\n *      </Modal.Title>\n *      <Modal.Body>\n *        Hello world!\n *      </Modal.Body>\n *      <Modal.Footer>\n *        <button type=\"button\" onClick={ props.onClose }>\n *          Close\n *        </button>\n *      </Modal.Footer>\n *    </Modal>\n *   );\n * }\n */\nexport const Modal = window.components.Modal;\n\n/**\n * Overlay component.\n *\n * @type {import('react').ComponentType<{ \n *  onClose: Function, \n *  anchor: Node, \n *  offset?: { top?: number, bottom?: number, left?: number, right?: number }, \n *  maxWidth?: number | string,\n *  maxHeight?: number | string,\n *  minWidth?: number | string,\n *  minHeight?: number | string\n * }>}\n *\n * @example\n * \n * import { Overlay } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomOverlay(props) {\n *   return (\n *    <Overlay onClose={ props.onClose } anchor={ props.btn_ref } offset={ props.anchor }>\n *      <Overlay.Title>\n *        Custom Modal\n *      </Overlay.Title>\n *      <Overlay.Body>\n *        Hello world!\n *      </Overlay.Body>\n *      <Overlay.Footer>\n *        <button type=\"button\" onClick={ props.onClose }>\n *          Close\n *        </button>\n *      </Overlay.Footer>\n *    </Overlay>\n *   );\n * }\n */\n export const Overlay = window.components.Overlay || NotCompatible('5.0');\n\n /**\n * Section component.\n *\n * @type {import('react').ComponentType<{ maxHeight: Number | String, relativePos: Boolean } }>}\n *\n * @example\n * \n * import { Section } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomSection(props) {\n *   return (\n *    <Section maxHeight=\"240px\">\n *     <Section.Header>\n *       Custom section\n *     </Section.Header>\n *     <Section.Body>\n *       Hello world!\n *     </Section.Body>\n *     <Section.Actions>\n *      <button type=\"button\" onClick={ props.onClose }>\n *        Close\n *      </button>\n *     </Section.Actions>\n *    </Section>\n *   );\n * }\n */\nexport const Section = window.components.Section || NotCompatible('5.0');\n\n /**\n * ToggleSwitch component.\n *\n * @type {import('react').ComponentType<{ id: string, name: string, label?: string, switcherLabel?: string, description?: string }>}\n *\n * @example\n * \n * import { ToggleSwitch } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomToggle(props) {\n *   return (\n *    <Formik initialValues={ initialValues } onSubmit={ this.onSubmit }>\n *      {() => (\n *        <Form>\n *          <Field\n *            component={ ToggleSwitch }\n *            switcherLabel=\"Switcher label\"\n *            id={ id }\n *            name={ name }\n *            description=\"Toggle description\"\n *          />\n *        </Form>\n *       )}\n *    </Formik>\n *   );\n * }\n */\nexport const ToggleSwitch = window.components.ToggleSwitch || NotCompatible('5.0');","/**\n * Validate and register a client plugin.\n *\n * @param {Object} plugin\n * @param {String} type\n */\nexport function registerClientPlugin(plugin, type) {\n  var plugins = window.plugins || [];\n  window.plugins = plugins;\n\n  if (!plugin) {\n    throw new Error('plugin not specified');\n  }\n\n  if (!type) {\n    throw new Error('type not specified');\n  }\n\n  plugins.push({\n    plugin: plugin,\n    type: type\n  });\n}\n\n/**\n * Validate and register a client plugin.\n *\n * @param {import('react').ComponentType} extension\n *\n * @example\n *\n * import MyExtensionComponent from './MyExtensionComponent';\n *\n * registerClientExtension(MyExtensionComponent);\n */\nexport function registerClientExtension(component) {\n  registerClientPlugin(component, 'client');\n}\n\n/**\n * Validate and register a bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.modeler.additionalModules');\n}\n\n/**\n * Validate and register a platform specific bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerPlatformBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerPlatformBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerPlatformBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.platform.modeler.additionalModules');\n}\n\n/**\n * Validate and register a cloud specific bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerCloudBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerCloudBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerCloudBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.cloud.modeler.additionalModules');\n}\n\n/**\n * Validate and register a bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a platform specific bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerPlatformBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerPlatformBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerPlatformBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.platform.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a cloud specific bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerCloudBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerCloudBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerCloudBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.cloud.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a cloud specific dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerCloudDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerCloudDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerCloudDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.cloud.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a platform specific dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerPlatformDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerPlatformDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerPlatformDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.platform.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.modeler.${c}.additionalModules`));\n}\n\n/**\n * Validate and register a cloud specific dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerCloudDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerCloudDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerCloudDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerCloudDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.cloud.modeler.${c}.additionalModules`));\n}\n\n/**\n * Validate and register a platform specific dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerPlatformDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerPlatformDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerPlatformDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerPlatformDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.platform.modeler.${c}.additionalModules`));\n}\n\n/**\n * Return the modeler directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getModelerDirectory() {\n  return window.getModelerDirectory();\n}\n\n/**\n * Return the modeler plugin directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getPluginsDirectory() {\n  return window.getPluginsDirectory();\n}","if (!window.react) {\n  throw new Error('Not compatible with Camunda Modeler < 3.4');\n}\n\n/**\n * React object used by Camunda Modeler. Use it to create UI extension.\n *\n * @type {import('react')}\n */\nmodule.exports = window.react;","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\",\n  viewBox: \"0 0 48 48\"\n}, props), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"a\",\n  x1: \"-248\",\n  x2: \"-238\",\n  y1: \"-234\",\n  y2: \"-234\",\n  gradientTransform: \"rotate(180 -112 -112)\",\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".266\",\n  stopColor: \"#199ae0\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".582\",\n  stopColor: \"#1898de\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".745\",\n  stopColor: \"#1590d6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".873\",\n  stopColor: \"#1083c9\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".982\",\n  stopColor: \"#0870b7\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"1\",\n  stopColor: \"#076cb3\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#a)\",\n  d: \"M14 13h9a1 1 0 001-1V8a1 1 0 00-1-1h-9v6z\"\n}), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"b\",\n  x1: \"3.924\",\n  x2: \"17.001\",\n  y1: \"8.199\",\n  y2: \"41.867\",\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"0\",\n  stopColor: \"#32bdef\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"1\",\n  stopColor: \"#1ea2e4\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#b)\",\n  d: \"M18.19 32H14V7l-4.828 4.828A4 4 0 008 14.657V32H3.81c-.72 0-1.08.87-.571 1.379L9.94 40.08a1.5 1.5 0 002.121 0l6.701-6.701c.509-.509.148-1.379-.572-1.379z\"\n}), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"c\",\n  x1: \"-365\",\n  x2: \"-355\",\n  y1: \"-231.472\",\n  y2: \"-231.472\",\n  gradientTransform: \"translate(389 269.472)\",\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".266\",\n  stopColor: \"#199ae0\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".582\",\n  stopColor: \"#1898de\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".745\",\n  stopColor: \"#1590d6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".873\",\n  stopColor: \"#1083c9\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \".982\",\n  stopColor: \"#0870b7\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"1\",\n  stopColor: \"#076cb3\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#c)\",\n  d: \"M34 35h-9a1 1 0 00-1 1v4a1 1 0 001 1h9v-6z\"\n}), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"d\",\n  x1: \"32.313\",\n  x2: \"44\",\n  y1: \"7.663\",\n  y2: \"40.775\",\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"0\",\n  stopColor: \"#32bdef\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"1\",\n  stopColor: \"#1ea2e4\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#d)\",\n  d: \"M29.81 16H34v25l4.828-4.828A4.001 4.001 0 0040 33.344V16h4.19c.72 0 1.08-.87.571-1.379l-6.7-6.701a1.5 1.5 0 00-2.121 0l-6.701 6.701A.807.807 0 0029.81 16z\"\n})));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\r\n * under one or more contributor license agreements. See the NOTICE file\r\n * distributed with this work for additional information regarding copyright\r\n * ownership.\r\n *\r\n * Camunda licenses this file to you under the MIT; you may not use this file\r\n * except in compliance with the MIT License.\r\n */\r\n\r\nimport { registerClientExtension } from 'camunda-modeler-plugin-helpers';\r\n\r\nimport ConnectorControllerPlugin from './ConnectorControllerPlugin';\r\n\r\nregisterClientExtension(ConnectorControllerPlugin);\r\n"],"names":[],"sourceRoot":""}